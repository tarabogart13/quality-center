<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<context:annotation-config />
	<context:component-scan base-package="de.logicline" />

	<mvc:annotation-driven />
	<mvc:resources mapping="/js/**" location="/resources/js/" />
	<mvc:resources mapping="/css/**" location="/resources/css/" />
	<mvc:resources mapping="/templates/**" location="/resources/templates/" />
	<mvc:resources mapping="/img/**" location="/resources/img/" />

	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="reCaptcha" class="net.tanesha.recaptcha.ReCaptchaImpl">
		<property name="privateKey" value="6LciewUTAAAAAEU8qfsCy4gcO1MxzMqFoezv1jDk" />
	</bean>

	<tx:annotation-driven />
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />

	</bean>


	<!-- ........................................................................... -->
	<!-- Default Profile -->
	<!-- ........................................................................... -->

	<beans profile="default">


		<!-- To develop locally please add the credentials from your heroku postgresDb -->

		<bean id="dataSource"
			class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="driverClassName" value="org.postgresql.Driver" />
			<property name="url"
				value="jdbc:postgresql://yourserver:yourport/yourdatabase?ssl=true&amp;sslfactory=org.postgresql.ssl.NonValidatingFactory" />
			<property name="username" value="yourusername" />
			<property name="password" value="yourpassword" />
		</bean>

		<jdbc:initialize-database data-source="dataSource"
			ignore-failures="DROPS">
			<jdbc:script location="classpath:schema-prod.sql" />
			<jdbc:script location="classpath:test-data-prod.sql" />
		</jdbc:initialize-database>

		<bean id="entityManagerFactory"
			class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
			<property name="packagesToScan" value="de.logicline" />
			<property name="dataSource" ref="dataSource" />
			<property name="jpaVendorAdapter">
				<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
			</property>
			<property name="jpaProperties">
				<props>
					<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
					<prop key="hibernate.show_sql">true</prop>
					<prop key="hibernate.generate_ddl">false</prop>
					<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
				</props>
			</property>
		</bean>


	</beans>


	<beans profile="prod">
		<bean class="java.net.URI" id="dbUrl">
			<constructor-arg value="#{systemEnvironment['DATABASE_URL']}" />
		</bean>

		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
			<property name="url"
				value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }" />
			<property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }" />
			<property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }" />
		</bean>

		<jdbc:initialize-database data-source="dataSource"
			ignore-failures="DROPS">
			<jdbc:script location="classpath:schema-prod.sql" />
			<jdbc:script location="classpath:test-data-prod.sql" />
		</jdbc:initialize-database>


		<bean id="entityManagerFactory"
			class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="jpaVendorAdapter">
				<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
			</property>
			<property name="jpaProperties">
				<props>
					<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
					<prop key="hibernate.show_sql">true</prop>
					<prop key="hibernate.generate_ddl">false</prop>
					<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
				</props>
			</property>
		</bean>
	</beans>

</beans>
